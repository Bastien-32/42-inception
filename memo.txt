


1- creer une docker 
	docker run -d -p 80:80 docker/getting-started



commandes utiles
	docker images : liste les images dispo sur la machine
	docker ps : idem docker images
	docker pull [nom de l'image a telécharger] : télécharge l'image, souhaitée sur la plate-forme docker hub
	docker run -it [nom de l'image a telécharger] : lance le conteneur en local (-it -> image interactive)
	docker run -it [nom de l'image a telécharger] : lance le conteneur en détaché (en arrière plan)
	docker stop [ID du conteneur] : arrete le conteneur

	lancer nginx : docker run -d -p 8080:80 nginx
		-d :  détache le conteneur du processus principal de la console. Permet de continuer à utiliser la console pendant que votre conteneur tourne sur un autre processus
		-p  : pour définir l'utilisation de ports. Dans notre cas, nous lui avons demandé de transférer le trafic du port 8080 vers le port 80 du conteneur. Ainsi, en vous rendant sur l'adresse  http://127.0.0.1:8080  , vous aurez la page par défaut de Nginx.

	docker rm [ID du conteneur] : supprime le conteneur et son contenu
	docker system prune : supprime l'ensemble des :
		conteneurs Docker qui ne sont pas en status running ;
		réseaux créés par Docker qui ne sont pas utilisés par au moins un conteneur ;
		images Docker non utilisées ;
		caches utilisés pour la création d'images Docker.

Dans le prochain Inception, il ne faut pas prendre des containers déjà tout monté, il faut les monter soi-même.

Tout d'abord, il faut choisir une distribution qui supportera chacun de nos container.
On ne fait pas une distribution globale, mais bien une distribution par container.
Il peut donc y avoir plusieurs distributions différentes selon les containers.
	debian : distribution, complète et épurée (22Mo)
	alpine : distribution légère (5 Mo) et donc moins de fonctionnalités
